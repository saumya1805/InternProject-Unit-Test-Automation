package industries.visit.impl.connect.features;

import java.util.Map;
import javax.inject.Provider;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;
import core.connect.resources.parameters.Parameter;
import industries.visit.impl.connect.resources.*;
import sfdc.industries.visit.connect.api.feature.IGenericVisitConnectFeature;
import sfdc.industries.visit.connect.api.resources.*;

@Component
@Lazy
public class GenericVisitConnectFeature implements IGenericVisitConnectFeature {

      @Autowired
      private Provider<VisitListResource> visitListResourceProvider;

      @Autowired
      private Provider<VisitOverviewResource> visitOverviewResourceProvider;

      @Autowired
      private Provider<VisitAddressListResource> visitAddressListResourceProvider;

      @Autowired
      private Provider<VisitTaskListResource> visitTaskListResourceProvider;

      @Autowired
      private Provider<VisitQuestionListResource> visitQuestionListResourceProvider;

      @Autowired
      private Provider<VisitNoteListResource> visitNoteListResourceProvider;

      @Autowired
      private Provider<VisitImageListResource> visitImageListResourceProvider;

      @Autowired
      private Provider<VisitSignerListResource> visitSignerListResourceProvider;

      @Autowired
      private Provider<VisitRelatedListResource> visitRelatedListResourceProvider;

      @Autowired
      private Provider<CreateVisitResource> createVisitResourceProvider;

      @Override
      public <T>T buildLogicalResource(Class<T> logicalResourceClass, Map<String, Parameter> resourceParameters) throws ServiceException{
          if (logicalResourceClass == IVisitListResource.class) {
              VisitListResource visitListResource = visitListResourceProvider.get();
              visitListResource.setResourceParameters(resourceParameters);
              return logicalResourceClass.cast(visitListResource);

          } else if (logicalResourceClass == IVisitOverviewResource.class) {
              VisitOverviewResource visitOverviewResource = visitOverviewResourceProvider.get();
              visitOverviewResource.setResourceParameters(resourceParameters);
              return logicalResourceClass.cast(visitOverviewResource);

          } else if (logicalResourceClass == IVisitAddressListResource.class) {
              VisitAddressListResource visitAddressListResource = visitAddressListResourceProvider.get();
              visitAddressListResource.setResourceParameters(resourceParameters);
              return logicalResourceClass.cast(visitAddressListResource);

          } else if (logicalResourceClass == IVisitTaskListResource.class) {
              VisitTaskListResource visitTaskListResource = visitTaskListResourceProvider.get();
              visitTaskListResource.setResourceParameters(resourceParameters);
              return logicalResourceClass.cast(visitTaskListResource);

          } else if (logicalResourceClass == IVisitQuestionListResource.class) {
              VisitQuestionListResource visitQuestionListResource = visitQuestionListResourceProvider.get();
              visitQuestionListResource.setResourceParameters(resourceParameters);
              return logicalResourceClass.cast(visitQuestionListResource);

          } else if (logicalResourceClass == IVisitNoteListResource.class) {
              VisitNoteListResource visitNoteListResource = visitNoteListResourceProvider.get();
              visitNoteListResource.setResourceParameters(resourceParameters);
              return logicalResourceClass.cast(visitNoteListResource);

          } else if (logicalResourceClass == IVisitImageListResource.class) {
              VisitImageListResource visitImageListResource = visitImageListResourceProvider.get();
              visitImageListResource.setResourceParameters(resourceParameters);
              return logicalResourceClass.cast(visitImageListResource);

          } else if (logicalResourceClass == IVisitSignerListResource.class) {
              VisitSignerListResource visitSignerListResource = visitSignerListResourceProvider.get();
              visitSignerListResource.setResourceParameters(resourceParameters);
              return logicalResourceClass.cast(visitSignerListResource);

          } else if(logicalResourceClass == IVisitRelatedListResource.class) {
              VisitRelatedListResource visitRelatedListResource = visitRelatedListResourceProvider.get();
              visitRelatedListResource.setResourceParameters(resourceParameters);
              return logicalResourceClass.cast(visitRelatedListResource);
          } else if(logicalResourceClass == ICreateVisitResource.class) {
              CreateVisitResource createVisitResource = createVisitResourceProvider.get();
              createVisitResource.setResourceParameters(resourceParameters);
              return logicalResourceClass.cast(createVisitResource);
          }
          return null;
      }
 }